rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Aturan untuk koleksi users
    match /users/{userId} {
      // Izin untuk user document
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;

      // Aturan untuk tasks sub-collection
      match /tasks/{taskId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && request.auth.uid == userId;
        allow update: if request.auth != null && request.auth.uid == userId;
        allow delete: if request.auth != null && request.auth.uid == userId;

        // Validasi data untuk tasks
        function isValidTask() {
          let requiredFields = ['judulTugas', 'matkul', 'tanggal', 'waktu', 'isCompleted'];
          let taskData = request.resource.data;

          return taskData.keys().hasAll(requiredFields)
              && taskData.judulTugas is string && taskData.judulTugas.size() <= 100
              && taskData.matkul is string && taskData.matkul.size() <= 100
              && taskData.tanggal is timestamp
              && taskData.waktu is timestamp
              && taskData.isCompleted is bool;
        }

        // Hanya ijinkan membuat/update jika data valid
        allow create: if request.auth != null && request.auth.uid == userId && isValidTask();
        allow update: if request.auth != null && request.auth.uid == userId && isValidTask();
      }

      // Aturan untuk schedules sub-collection
      match /schedules/{scheduleId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && request.auth.uid == userId;
        allow update: if request.auth != null && request.auth.uid == userId;
        allow delete: if request.auth != null && request.auth.uid == userId;

        // Validasi data untuk schedules
        function isValidSchedule() {
          let requiredFields = ['matkul', 'hari', 'jam', 'ruangan'];
          let scheduleData = request.resource.data;

          return scheduleData.keys().hasAll(requiredFields)
              && scheduleData.matkul is string && scheduleData.matkul.size() <= 100
              && scheduleData.hari is string && scheduleData.hari.size() <= 10
              && scheduleData.jam is timestamp
              && scheduleData.ruangan is string && scheduleData.ruangan.size() <= 50;
        }

        // Hanya ijinkan membuat/update jika data valid
        allow create: if request.auth != null && request.auth.uid == userId && isValidSchedule();
        allow update: if request.auth != null && request.auth.uid == userId && isValidSchedule();
      }
    }
  }
}